sub range(begin : int; end : int; step : int = 1) : [int] {
	l : [int] = [];
	count : int = begin;
	
	while(count < end){
		l = l ++ [count];
		count = count + 1;
	}
	return l;
}

sub range(end : int) : [int] {
	return range(0, end);
}

### END LIB ###

sub read_float() : float {
	str : string;
	read str;
	return(str@float);
}

num : float = read_float();
limits : [float] = [-1.0, 25.0, 50.0, 75.0, 100.0];
n_intervals : int = 5;

in_interval : [int] = [];
for i over range(n_intervals-1)
 	in_interval = in_interval ++ [0];

while (num >= 0.0) {
 	i : int = num@int;
 	d : float = num - i;
	for l over range(1, n_intervals) {
	 	if (num >= (limits[l-1]+1) and num <= limits[l])
	 		in_interval[l-1] = in_interval[l-1] + 1;
	}
	print(in_interval);

 	num = read_float();
}

print(in_interval);